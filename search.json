[{"path":"https://ncahill89.github.io/EIVmodels/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 EIVmodels authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ncahill89.github.io/EIVmodels/articles/eivmodels.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Introduction to EIVmodels","text":"","code":"library(EIVmodels)"},{"path":"https://ncahill89.github.io/EIVmodels/articles/eivmodels.html","id":"example---simple-linear-regression","dir":"Articles","previous_headings":"","what":"Example - Simple Linear Regression","title":"Introduction to EIVmodels","text":"package provides options simulate data different types models measurement error x y variable. ’ll start simulating data linear regression model. Next ’ll plot simulated data ’ll add true regression line plot adding argument add_truth = TRUE plot_dat() function.  Now ’ll fit errors--variables simple linear regression model data close get estimating true data generating process. ’ll start creating model object. ’ll see messages progress bar pop JAGS model starts run. Now ’ll plot model-based estimates uncertainty. ’ll overlay true line comparison.  access data created plot, use: access summary parameter estimates, use:","code":"dat <- sim_reg(n_sim = 10,                alpha = 0,                beta = 1,                x_err = 0.1) dat ## # A tibble: 10 × 6 ##        x x_err     y y_err true_line true_x ##    <dbl> <dbl> <dbl> <dbl>     <dbl>  <dbl> ##  1 0.588   0.1 0.499   0.1     0.520  0.520 ##  2 0.947   0.1 0.773   0.1     0.907  0.907 ##  3 0.390   0.1 0.375   0.1     0.375  0.375 ##  4 1.23    0.1 1.35    0.1     1.27   1.27  ##  5 0.252   0.1 0.192   0.1     0.239  0.239 ##  6 1.62    0.1 1.50    0.1     1.56   1.56  ##  7 0.504   0.1 0.757   0.1     0.649  0.649 ##  8 0.656   0.1 0.396   0.1     0.554  0.554 ##  9 0.979   0.1 1.07    0.1     0.967  0.967 ## 10 0.214   0.1 0.307   0.1     0.231  0.231 plot_dat(dat,          add_truth = TRUE) mod_eiv_reg <- run_mod(dat,                    model = \"model_eiv_reg\") ## module glm loaded ## Compiling model graph ##    Resolving undeclared variables ##    Allocating nodes ## Graph information: ##    Observed stochastic nodes: 20 ##    Unobserved stochastic nodes: 13 ##    Total graph size: 237 ##  ## Initializing model plot_res(mod_eiv_reg,          add_truth = TRUE) mod_reg_res <- par_est(mod = mod_eiv_reg) mod_reg_res$pred_res ## # A tibble: 50 × 4 ##        x pred_y  lwr_95 upr_95 ##    <dbl>  <dbl>   <dbl>  <dbl> ##  1 0.214  0.136 -0.109   0.355 ##  2 0.242  0.168 -0.0675  0.380 ##  3 0.271  0.200 -0.0264  0.404 ##  4 0.300  0.232  0.0145  0.429 ##  5 0.329  0.264  0.0556  0.455 ##  6 0.357  0.296  0.0964  0.478 ##  7 0.386  0.329  0.138   0.501 ##  8 0.415  0.361  0.177   0.528 ##  9 0.443  0.394  0.216   0.551 ## 10 0.472  0.426  0.255   0.578 ## # … with 40 more rows mod_reg_res$par_summary ## # A tibble: 1 × 9 ##   alpha alpha.lower alpha.upper  beta beta.lower beta.upper .width .point ##   <dbl>       <dbl>       <dbl> <dbl>      <dbl>      <dbl>  <dbl> <chr>  ## 1 0.724       0.587       0.855 0.508      0.349      0.681   0.95 median ## # … with 1 more variable: .interval <chr>"},{"path":"https://ncahill89.github.io/EIVmodels/articles/eivmodels.html","id":"example---change-point-linear-regression","dir":"Articles","previous_headings":"","what":"Example - Change-Point Linear Regression","title":"Introduction to EIVmodels","text":"","code":"dat <- sim_cp(n_sim = 30,                alpha = 0,                beta = c(1,0.1),                cp = 1,                x_err = 0.1) dat ## # A tibble: 30 × 6 ##        x x_err        y y_err true_line true_x ##    <dbl> <dbl>    <dbl> <dbl>     <dbl>  <dbl> ##  1 1.65    0.1 -0.0579    0.1   0.0563   1.56  ##  2 1.99    0.1  0.0300    0.1   0.0995   2.00  ##  3 0.437   0.1 -0.239     0.1  -0.341    0.659 ##  4 0.273   0.1 -0.753     0.1  -0.626    0.374 ##  5 1.34    0.1 -0.0394    0.1   0.0294   1.29  ##  6 1.18    0.1 -0.00178   0.1   0.0268   1.27  ##  7 1.44    0.1  0.102     0.1   0.0407   1.41  ##  8 1.02    0.1 -0.0866    0.1   0.00228  1.02  ##  9 1.34    0.1  0.0279    0.1   0.0148   1.15  ## 10 0.517   0.1 -0.216     0.1  -0.416    0.584 ## # … with 20 more rows"},{"path":"https://ncahill89.github.io/EIVmodels/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"https://ncahill89.github.io/EIVmodels/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cahill N (2022). EIVmodels: Package (Title Case). R package version 0.1.0, https://ncahill89.github.io/EIVmodels/.","code":"@Manual{,   title = {EIVmodels: What the Package Does (Title Case)},   author = {Niamh Cahill},   year = {2022},   note = {R package version 0.1.0},   url = {https://ncahill89.github.io/EIVmodels/}, }"},{"path":"https://ncahill89.github.io/EIVmodels/index.html","id":"eivmodels","dir":"","previous_headings":"","what":"What the Package Does (Title Case)","title":"What the Package Does (Title Case)","text":"EIVmodels designed run commonly used models (linear regression, change point regression, Guassian process regression) accounting measurement error. Learn vignette(\"eivmodels\").","code":""},{"path":"https://ncahill89.github.io/EIVmodels/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (Title Case)","text":"","code":"# Install development version from Github devtools::install_github(\"ncahill89/EIVmodels\")"},{"path":[]},{"path":"https://ncahill89.github.io/EIVmodels/reference/dat_to_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Format data for plotting — dat_to_plot","title":"Format data for plotting — dat_to_plot","text":"Format data plotting","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/dat_to_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format data for plotting — dat_to_plot","text":"","code":"dat_to_plot(raw_dat)"},{"path":"https://ncahill89.github.io/EIVmodels/reference/dat_to_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format data for plotting — dat_to_plot","text":"raw_dat Input data columns x,x_err,y,y_err","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/dat_to_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format data for plotting — dat_to_plot","text":"Data formatted plotting measurement errors","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/par_est.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameter estimates and model estimates — par_est","title":"Get parameter estimates and model estimates — par_est","text":"Get parameter estimates model estimates","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/par_est.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameter estimates and model estimates — par_est","text":"","code":"par_est(mod)"},{"path":"https://ncahill89.github.io/EIVmodels/reference/par_est.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameter estimates and model estimates — par_est","text":"mod Fitted model object","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/par_est.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameter estimates and model estimates — par_est","text":"List model estimates (pred_res) parameter estimates (par_summary)","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/par_est.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parameter estimates and model estimates — par_est","text":"","code":"dat <- sim_reg(n_sim = 30) mod <- run_mod(dat, model = \"model_eiv_reg\") #> module glm loaded #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 60 #>    Unobserved stochastic nodes: 33 #>    Total graph size: 377 #>  #> Initializing model #>  par_est(mod) #> Warning: `gather_()` was deprecated in tidyr 1.2.0. #> Please use `gather()` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated. #> $pred_res #> # A tibble: 50 × 4 #>         x   pred_y   lwr_95  upr_95 #>     <dbl>    <dbl>    <dbl>   <dbl> #>  1 0.0633 -0.104   -0.217   0.00788 #>  2 0.105  -0.0539  -0.163   0.0537  #>  3 0.146  -0.00457 -0.109   0.0993  #>  4 0.188   0.0450  -0.0551  0.146   #>  5 0.230   0.0948  -0.00147 0.191   #>  6 0.271   0.145    0.0527  0.237   #>  7 0.313   0.194    0.106   0.283   #>  8 0.354   0.244    0.160   0.329   #>  9 0.396   0.294    0.213   0.375   #> 10 0.438   0.343    0.266   0.422   #> # … with 40 more rows #>  #> $par_summary #> # A tibble: 1 × 9 #>   alpha alpha.lower alpha.upper  beta beta.lower beta.upper .width .point #>   <dbl>       <dbl>       <dbl> <dbl>      <dbl>      <dbl>  <dbl> <chr>  #> 1 0.844       0.783       0.900 0.666      0.600      0.736   0.95 median #> # … with 1 more variable: .interval <chr> #>"},{"path":"https://ncahill89.github.io/EIVmodels/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://ncahill89.github.io/EIVmodels/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/plot_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot data with measurement uncertainty (in y and x variables) — plot_dat","title":"Plot data with measurement uncertainty (in y and x variables) — plot_dat","text":"Plot data measurement uncertainty (y x variables)","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/plot_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot data with measurement uncertainty (in y and x variables) — plot_dat","text":"","code":"plot_dat(dat, add_truth = FALSE)"},{"path":"https://ncahill89.github.io/EIVmodels/reference/plot_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot data with measurement uncertainty (in y and x variables) — plot_dat","text":"dat Input data columns x,x_err,y,y_err add_truth Logical argument add \"True\" data generating process plot. set True using simulated data sim_dat","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/plot_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot data with measurement uncertainty (in y and x variables) — plot_dat","text":"Plot data measurement errors","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/plot_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot data with measurement uncertainty (in y and x variables) — plot_dat","text":"","code":"dat <- sim_reg(n_sim = 30) plot_dat(dat)"},{"path":"https://ncahill89.github.io/EIVmodels/reference/plot_res.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of data plus model estimates (and credible intervals) — plot_res","title":"Plot of data plus model estimates (and credible intervals) — plot_res","text":"Plot data plus model estimates (credible intervals)","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/plot_res.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of data plus model estimates (and credible intervals) — plot_res","text":"","code":"plot_res(mod1, mod2 = NULL, add_truth = FALSE)"},{"path":"https://ncahill89.github.io/EIVmodels/reference/plot_res.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of data plus model estimates (and credible intervals) — plot_res","text":"mod1 fitted model mod2 optional second fitted model comparison add_truth Logical argument add \"True\" data generating process plot. set True using simulated data sim_dat","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/plot_res.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of data plus model estimates (and credible intervals) — plot_res","text":"Plot","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/plot_res.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot of data plus model estimates (and credible intervals) — plot_res","text":"","code":"dat <- sim_reg(n_sim = 30) mod <- run_mod(dat,model = \"model_eiv_reg\") #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 60 #>    Unobserved stochastic nodes: 33 #>    Total graph size: 377 #>  #> Initializing model #>  plot_res(mod)"},{"path":"https://ncahill89.github.io/EIVmodels/reference/run_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit errors-in-variables models with JAGS — run_mod","title":"Fit errors-in-variables models with JAGS — run_mod","text":"Fit errors--variables models JAGS","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/run_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit errors-in-variables models with JAGS — run_mod","text":"","code":"run_mod(dat, model = \"model_eiv_reg\", iter = 15000, burnin = 5000, thin = 5)"},{"path":"https://ncahill89.github.io/EIVmodels/reference/run_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit errors-in-variables models with JAGS — run_mod","text":"dat Input data columns x,x_err,y,y_err model model run. Choose model_reg, model_eiv_reg, model_cp, model_eiv_cp, model_gp, model_eiv_gp, model_eiv_igp. Defaults model_eiv_reg. iter MCMC iterations burnin MCMC burnin thin MCMC thinning","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/run_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit errors-in-variables models with JAGS — run_mod","text":"List data, JAGS input data, model output name model file.","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/run_mod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit errors-in-variables models with JAGS — run_mod","text":"","code":"dat <- sim_reg(n_sim = 30) mod <- run_mod(dat, model = \"model_eiv_reg\") #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 60 #>    Unobserved stochastic nodes: 33 #>    Total graph size: 377 #>  #> Initializing model #>"},{"path":"https://ncahill89.github.io/EIVmodels/reference/sim_cp.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data with measurment error from a change-point linear regression — sim_cp","title":"Simulate data with measurment error from a change-point linear regression — sim_cp","text":"Simulate data measurment error change-point linear regression","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/sim_cp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data with measurment error from a change-point linear regression — sim_cp","text":"","code":"sim_cp(   n_sim = 50,   min_x = 0,   max_x = 2,   alpha = 0,   beta = c(1, 2),   cp = 1,   sigma = 0.1,   x_err = 0.1,   y_err = 0.1 )"},{"path":"https://ncahill89.github.io/EIVmodels/reference/sim_cp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data with measurment error from a change-point linear regression — sim_cp","text":"n_sim Number data points simulate min_x Minimum x value max_x Maximum x value alpha Regression intercept beta Regression slope cp Change point sigma Nugget variation x_err x measurement error y_err y measurement error","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/sim_cp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data with measurment error from a change-point linear regression — sim_cp","text":"Simulated dataset columns x, x_err, y, y_err","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/sim_cp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate data with measurment error from a change-point linear regression — sim_cp","text":"","code":"sim_cp(n_sim = 50) #> # A tibble: 50 × 6 #>        x x_err      y y_err true_line true_x #>    <dbl> <dbl>  <dbl> <dbl>     <dbl>  <dbl> #>  1 1.50    0.1  0.838   0.1    0.970   1.48  #>  2 0.627   0.1 -0.408   0.1   -0.500   0.500 #>  3 1.91    0.1  1.53    0.1    1.75    1.87  #>  4 1.21    0.1  0.589   0.1    0.677   1.34  #>  5 0.273   0.1 -0.589   0.1   -0.651   0.349 #>  6 1.45    0.1  0.883   0.1    0.794   1.40  #>  7 1.06    0.1  0.243   0.1    0.268   1.13  #>  8 1.62    0.1  1.41    0.1    1.35    1.68  #>  9 0.107   0.1 -0.782   0.1   -0.786   0.214 #> 10 1.13    0.1  0.170   0.1    0.0883  1.04  #> # … with 40 more rows"},{"path":"https://ncahill89.github.io/EIVmodels/reference/sim_gp.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data with measurment error from a Gaussian process regression — sim_gp","title":"Simulate data with measurment error from a Gaussian process regression — sim_gp","text":"Simulate data measurment error Gaussian process regression","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/sim_gp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data with measurment error from a Gaussian process regression — sim_gp","text":"","code":"sim_gp(   n_sim = 50,   min_x = 0,   max_x = 2,   alpha = 0,   sigma_g = 2,   phi = 2,   sigma = 0.1,   x_err = 0.1,   y_err = 0.1 )"},{"path":"https://ncahill89.github.io/EIVmodels/reference/sim_gp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data with measurment error from a Gaussian process regression — sim_gp","text":"n_sim number data points simulate min_x Minimum x value max_x Maximum x value alpha regression intercept sigma_g GP variance parameter phi GP correlation parameter sigma nugget variation x_err x measurement error y_err y measurement error","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/sim_gp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data with measurment error from a Gaussian process regression — sim_gp","text":"Simulated dataset columns x, x_err, y, y_err","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/sim_gp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate data with measurment error from a Gaussian process regression — sim_gp","text":"","code":"sim_gp(n_sim = 50) #> Compiling rjags model... #> Calling the simulation using the rjags method... #> Note: the model did not require adaptation #> Burning in the model for 4000 iterations... #> Running the model for 1 iterations... #> Simulation complete #> Finished running the simulation #> # A tibble: 50 × 6 #>         x x_err      y y_err true_line true_x #>     <dbl> <dbl>  <dbl> <dbl>     <dbl>  <dbl> #>  1 0.141    0.1  2.36    0.1     2.07  0.0768 #>  2 0.361    0.1  1.80    0.1     2.02  0.0912 #>  3 0.0878   0.1  1.80    0.1     1.97  0.106  #>  4 0.217    0.1  1.87    0.1     1.61  0.183  #>  5 0.280    0.1  1.02    0.1     1.25  0.240  #>  6 0.331    0.1  0.892   0.1     0.865 0.295  #>  7 0.249    0.1  1.10    0.1     0.753 0.310  #>  8 0.268    0.1  0.419   0.1     0.513 0.342  #>  9 0.393    0.1  0.376   0.1     0.170 0.388  #> 10 0.494    0.1 -0.134   0.1    -0.449 0.485  #> # … with 40 more rows"},{"path":"https://ncahill89.github.io/EIVmodels/reference/sim_reg.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data with measurment error from a simple linear regression — sim_reg","title":"Simulate data with measurment error from a simple linear regression — sim_reg","text":"Simulate data measurment error simple linear regression","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/sim_reg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data with measurment error from a simple linear regression — sim_reg","text":"","code":"sim_reg(   n_sim = 50,   min_x = 0,   max_x = 2,   alpha = 0,   beta = 1,   sigma = 0.1,   x_err = 0.1,   y_err = 0.1 )"},{"path":"https://ncahill89.github.io/EIVmodels/reference/sim_reg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data with measurment error from a simple linear regression — sim_reg","text":"n_sim Number data points simulate min_x Minimum x value max_x Maximum x value alpha Regression intercept beta Regression slope sigma Nugget variation x_err x measurement error y_err y measurement error","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/sim_reg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data with measurment error from a simple linear regression — sim_reg","text":"Simulated dataset columns x, x_err, y, y_err","code":""},{"path":"https://ncahill89.github.io/EIVmodels/reference/sim_reg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate data with measurment error from a simple linear regression — sim_reg","text":"","code":"sim_reg(n_sim = 50) #> # A tibble: 50 × 6 #>        x x_err      y y_err true_line true_x #>    <dbl> <dbl>  <dbl> <dbl>     <dbl>  <dbl> #>  1 1.35    0.1 1.55     0.1     1.48   1.48  #>  2 1.86    0.1 1.83     0.1     1.85   1.85  #>  3 1.58    0.1 1.65     0.1     1.71   1.71  #>  4 0.294   0.1 0.0801   0.1     0.265  0.265 #>  5 1.24    0.1 1.40     0.1     1.31   1.31  #>  6 0.143   0.1 0.261    0.1     0.185  0.185 #>  7 0.823   0.1 0.828    0.1     0.874  0.874 #>  8 0.307   0.1 0.252    0.1     0.283  0.283 #>  9 0.899   0.1 0.610    0.1     0.745  0.745 #> 10 0.287   0.1 0.159    0.1     0.296  0.296 #> # … with 40 more rows"}]
